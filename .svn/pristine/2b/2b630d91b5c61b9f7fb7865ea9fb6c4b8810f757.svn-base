package com.swust.vhas.service;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;

import com.swust.vhas.dao.VideoDao;
import com.swust.vhas.model.Video;

@Service
public class VideoService {

	@Autowired
	@Qualifier("videoDao")
	private VideoDao videoDao;

	public static Set<String> types;

	public int deleteByPrimaryKey(Integer id) {
		return videoDao.deleteByPrimaryKey(id);
	}

	public int insert(Video record) {
		return videoDao.insert(record);
	}

	public int insertSelective(Video record) {
		return videoDao.insertSelective(record);
	}

	public Video selectByPrimaryKey(Integer id) {
		return videoDao.selectByPrimaryKey(id);
	}

	public int updateByPrimaryKeySelective(Video record) {
		return videoDao.updateByPrimaryKeySelective(record);
	}

	public int updateByPrimaryKey(Video record) {
		return videoDao.updateByPrimaryKey(record);
	}

	public List<Video> selectTop(String beginTime, Integer size, String order, String type, Integer web) {
		Map<String, Object> map = new HashMap<>();
		map.put("beginTime", beginTime);
		map.put("size", size);
		map.put("order", order);
		map.put("type", type);
		map.put("webId", web);
		return videoDao.selectTop(map);
	}

	@SuppressWarnings("static-access")
	public Set<String> selectAllTypes(Integer webId) {
		if (types != null)
			return types;
		this.types = new HashSet<>();
		List<String> types = videoDao.selectAllTypes(webId);
		for (int i = 0; i < types.size(); i++) {
			String type = types.get(i);
			if (type == null || type.equals(""))
				continue;
			int index = type.indexOf('|');
			if (index <= 0)
				continue;
			type = type.substring(0, index);
			if (type.equals("null"))
				continue;
			this.types.add(type);
		}
		return this.types;
	}

}
